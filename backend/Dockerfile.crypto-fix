# Backend Dockerfile with Crypto Fix
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
RUN npm ci --only=production

# Copy source code
COPY . .

# Create a patch for the NestJS scheduler
RUN mkdir -p /app/patches
RUN echo 'diff --git a/scheduler.orchestrator.js b/scheduler.orchestrator.js\n\
    index xxxx..yyyy 100644\n\
    --- a/scheduler.orchestrator.js\n\
    +++ b/scheduler.orchestrator.js\n\
    @@ -87,7 +87,8 @@\n\
    addCron(methodRef, key, options) {\n\
    const cronFn = methodRef.bind(this);\n\
    const cronTime = this.parseCronExpression(options.cronTime);\n\
    -        const name = options.name || crypto.randomUUID();\n\
    +        const crypto = require("crypto");\n\
    +        const name = options.name || (crypto.randomUUID ? crypto.randomUUID() : Math.random().toString(36).substring(2, 15));\n\
    this.schedulerRegistry.addCronJob(name, new cron_1.CronJob(cronTime, cronFn, null, false, options.timeZone));\n\
    this.closeFunction.push(() => {\n\
    this.schedulerRegistry.getCronJob(name).stop();\n' > /app/patches/scheduler.patch

# Generate Prisma client
RUN npx prisma generate

# Apply the patch to fix the crypto issue
RUN if [ -f /app/node_modules/@nestjs/schedule/dist/scheduler.orchestrator.js ]; then \
    patch /app/node_modules/@nestjs/schedule/dist/scheduler.orchestrator.js < /app/patches/scheduler.patch || true; \
    fi

# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine AS runner

WORKDIR /app

# Install dumb-init for proper signal handling
RUN apk add --no-cache dumb-init

# Create non-root user
RUN addgroup --system --gid 1001 nestjs
RUN adduser --system --uid 1001 nestjs

# Copy built application
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/prisma ./prisma

# Set ownership
RUN chown -R nestjs:nestjs /app
USER nestjs

EXPOSE 3001

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Fix: path to main.js is in dist/src/main.js, not dist/main.js
CMD ["node", "dist/src/main.js"]
